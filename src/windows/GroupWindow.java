package windows;import javafx.application.Application;import javafx.event.ActionEvent;import javafx.event.EventHandler;import javafx.geometry.Orientation;import javafx.scene.Group;import javafx.scene.Scene;import javafx.scene.control.Button;import javafx.scene.control.CheckBox;import javafx.scene.control.TextArea;import javafx.scene.image.ImageView;import javafx.scene.layout.FlowPane;import javafx.scene.paint.Color;import javafx.stage.Stage;import webClient.WebClient;import java.io.IOException;public class GroupWindow extends Application {    private final WebClient webClient;    private final MainWindow mainWindow;    private final DialogWindow dialogWindow;    private final StringBuilder choosesPeople = new StringBuilder();    private final Button back = new Button("Back", new ImageView("icons\\cursor.jpg"));    private final Button create = new Button("Create");    private Stage stage;    GroupWindow(WebClient client, MainWindow window){        webClient = client;        mainWindow = window;        dialogWindow = new DialogWindow(webClient, mainWindow);    }    @Override    public void start(Stage primaryStage) throws Exception {        stage = primaryStage;        createBack();        createChatOfGroupPeople();    }    private void createChatOfGroupPeople() throws IllegalAccessException, IOException {        String online = webClient.getFriends();        if (online == null) return;        String[] friendsOnline = online.split("\n");        FlowPane root = new FlowPane(Orientation.VERTICAL, 140, 20);        root.setLayoutX(140);        root.setLayoutY(40);        for (String friend: friendsOnline){            CheckBox fr = new CheckBox(friend);            fr.setOnAction(actionEvent -> {                if (fr.isSelected()){                    choosesPeople.append(friend);                    choosesPeople.append("\n");                    if (choosesPeople.toString().split("\n").length >= 2) {                        createCreate(choosesPeople.toString());                        Group group = new Group(create, root, back);                        Scene scene = new Scene(group);                        scene.setFill(Color.LIGHTBLUE);                        stage.setScene(scene);                        stage.show();                    }                }                else{                    int index = choosesPeople.indexOf(friend);                    choosesPeople.delete(index, index + friend.length() + 1);                    if (choosesPeople.toString().split("\n").length < 2) {                        Group group = new Group(root, back);                        Scene scene = new Scene(group);                        scene.setFill(Color.LIGHTBLUE);                        stage.setScene(scene);                        stage.show();                    }                }            });            root.getChildren().add(fr);        }        Group group = new Group(root, back);        Scene scene = new Scene(group);        scene.setFill(Color.LIGHTBLUE);        stage.setScene(scene);        stage.show();    }    private void createCreate(String people){        create.setLayoutX(140);        create.setLayoutY(10);        create.setPrefHeight(10);        create.setOnAction(new EventHandler<ActionEvent>() {            @Override            public void handle(ActionEvent event) {                TextArea areaOut = new TextArea();                areaOut.setLayoutX(30);                areaOut.setLayoutY(20);                areaOut.setPrefWidth(360);                areaOut.setPrefHeight(20);                Button bnt = new Button("Create");                bnt.setLayoutY(60);                bnt.setLayoutX(185);                bnt.setOnAction(actionEvent ->{                    try {                        webClient.dialogName = areaOut.getText();                        webClient.activeClient = choosesPeople.toString() + webClient.getNameOfClient();                        dialogWindow.start(stage);                        Stage stage = (Stage) bnt.getScene().getWindow();                        stage.close();                    }catch (Exception ex){                        ex.printStackTrace();                    }                });                Group group = new Group(areaOut, bnt);                Scene scene = new Scene(group);                scene.setFill(Color.LIGHTBLUE);                Stage newWindow = new Stage();                newWindow.setTitle("Create name of chat");                newWindow.setScene(scene);                newWindow.setWidth(430);                newWindow.setHeight(140);                newWindow.setX(stage.getX() + 50);                newWindow.setY(stage.getY() + 50);                newWindow.show();            }        });    }    private void createBack(){        back.setPrefHeight(40);        back.setPrefWidth(90);        back.setLayoutY(20);        back.setOnAction(actionEvent -> {            try{                mainWindow.start(stage);            }catch (Exception ex){                ex.printStackTrace();            }        });    }}